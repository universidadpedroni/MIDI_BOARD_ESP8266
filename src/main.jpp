#include <Arduino.h>
#include "blink.h"
//#include "wiFiFunctions.h"
#include "flashFunc.h"
#include "switchesFunc.h"
#include <EEPROM.h>
#include <ESP8266WiFi.h>
#include "htmlContent.h"


// https://www.instructables.com/ESP-12F-ESP8266-Module-Minimal-Breadboard-for-Flas/
// https://randomnerdtutorials.com/esp8266-nodemcu-client-server-wi-fi/

/* En el silkscreen de la ESP8266 los pines GPIO4 y GPIO5 estás swapeados.*/

/* PARA PROGRAMAR: 
1. GPIO0 a GND
2. Dar un toque a GND al RESET. La esp entra en modo FLASH
3. Cargar el software
4. Levantar el GPIO0
5. Dar un toque a GND al reset.
*/


blink ledBlink(4);
flashFunctions flashF;
//wifiFunctions wifiF;
//Adafruit_SSD1306 display = Adafruit_SSD1306(128,32, &Wire);
const int NUM_SWITCHES = 7; // Definir externamente
mySwitch misSwitch[NUM_SWITCHES]; // Definir externamente

WiFiServer server(80);



void switchesInit(){
  for(int i = 0; i < NUM_SWITCHES; i++){
    misSwitch[i].init(i, 0, 0, 0, 0);
    //misSwitch[i].loadDefaults();
    //misSwitch[i].save();
    misSwitch[i].load();
    misSwitch[i].showConfig();
  }
}


/*
void testMidi(){
  //MIDI.sendNoteOn(42, 127, 1);    // Send a Note (pitch 42, velo 127 on channel 1)
  //delay(10);		            // Wait for a second
  //MIDI.sendNoteOff(42, 0, 1);     // Stop the note
  //delay(10);  
}*/

void wifiInit(){
  const char* ssid = "iPhone de Juan";
  const char* password = "HelpUsObiJuan";
  unsigned long tiempoDeInicio = millis();
  Serial.printf("Intentando conectar a la red Wifi %s...", ssid);
  WiFi.begin(ssid, password);
  while(WiFi.status() != WL_CONNECTED && (tiempoDeInicio + 20000 > millis())){
    Serial.print(".");
    delay(1000);
  }
  if(WiFi.status() == WL_CONNECTED){
    Serial.print("\nIP del servidor:");
    Serial.println(WiFi.localIP());
  }
  else{
    Serial.println("No se pudo conectar al Wifi. Llamen a los Avengers");
  }
  
}

void serverInit() {
    server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send_P(200, "text/html", htmlPage);
    });

    

    server.begin();
    Serial.println("Server started.");
}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(74880); // velocidad del bootloader
  EEPROM.begin(NUM_SWITCHES * sizeof(mySwitch)); // Inicializar EEPROM con el tamaño necesario

  //Serial1.println(31250);
  Serial.printf("Fecha y Hora: %s, %s\n", __DATE__, __TIME__);
  ledBlink.init();
  switchesInit();
   
  //wifiF.init(WiFi_NODE); // TODO: Esto debería devolver true o false
  //wifiInit();
  //serverInit();
  
  flashF.checkFlash();
  Serial.println("Setup terminado");
  
  
  
  
}

void loop() {
  ledBlink.update(500);
  
}

